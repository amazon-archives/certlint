#!/usr/bin/ruby -Eutf-8:utf-8
# encoding: UTF-8
# Copyright 2015-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"). You may not
# use this file except in compliance with the License. A copy of the License
# is located at
#
#   http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.
require 'certlint'

caa_flag = true if ARGV.last == "-CAA"
ARGV.each do |file|
  next if file == "-CAA"
  fn = File.basename(file)
  raw = File.read(file)

  if raw.include? '-BEGIN CERTIFICATE-'
    m, der = CertLint::PEMLint.lint(raw, 'CERTIFICATE')
  else
    m  = []
    der = raw
  end

  m += CertLint::CABLint.lint(der)
  m += CAAuth.CheckCAA(der) if caa_flag
  m.each do |msg|
    begin
      puts "#{msg}\t#{fn}"
    rescue Encoding::UndefinedConversionError
      print msg
      puts "\t#{fn}"
    end
  end
end
